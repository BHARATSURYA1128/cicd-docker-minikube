# .github/workflows/ci-cd.yml
name: CI/CD Pipeline for Two-Tier App

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-app-backend:${{ github.sha }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-app-frontend:${{ github.sha }}

  deploy-to-minikube:
    name: Deploy to Minikube
    runs-on: ubuntu-latest
    needs: build-and-push # This job depends on the previous one
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start Minikube
        uses: manusa/actions-setup-minikube@v2.9.0
        with:
          minikube version: 'v1.32.0'
          kubernetes version: 'v1.28.3'
          driver: docker

      - name: Update image tag in Kubernetes manifests
        run: |
          sed -i 's/:LATEST_TAG/:${{ github.sha }}/g' k8s/*.yaml
          sed -i 's|bharatsurya1128|${{ secrets.DOCKER_USERNAME }}|g' k8s/*.yaml
          echo "--- Updated Manifests ---"
          cat k8s/*.yaml

      - name: Deploy to Minikube
        run: kubectl apply -f k8s/

      - name: Verify deployment
        run: |
          echo "--- Waiting for pods to be ready... ---"
          kubectl wait --for=condition=ready pod -l app=backend --timeout=120s
          kubectl wait --for=condition=ready pod -l app=frontend --timeout=120s
          echo "--- Pods and Services ---"
          kubectl get pods,svc -o wide